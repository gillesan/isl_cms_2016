var chalk = require('chalk');
var exec = require('exec');
var child_process = require('child_process');
var path = require('path');
var yeoman = require('yeoman-generator');
var yosay = require('yosay');
var wrench = require('wrench');
var shell = require('shelljs');
var Promise = require('es6-promise').Promise;
var promise = require('promise');
var appName = '';
module.exports = yeoman.generators.Base.extend({
    constructor: function() {
        yeoman.generators.Base.apply(this, arguments);
    },

    prompting: {
        askForName: function() {
            var done = this.async();
            this.prompt([{
                type: 'input',
                name: 'includeName',
                message: 'Project Name ?',
                default: 'project-name'
            }], function(answers) {
                this.includeName = answers.includeName;
                this.appname = answers.includeName;
                appName = answers.includeName;
                this.mkdir(this.appname);
                this.mkdir(this.appname + '/logs');
                shell.exec('mysql -u root -e "create database ' + this.appname + '"');
                done();
            }.bind(this));
        },
    },

    writing: function() {
        this.copy('composer.json', this.appname + '/composer.json');
        this.copy('development.nginx', this.appname + '/development.nginx');
    },

    install: function() {
        var promise = new Promise(function(resolve, reject) {
            setTimeout(function() {
                resolve('foo');
            }, 1000);
        });
        promise.then(function(result) {
            shell.exec('cd ' + appName + ' && composer install');
            shell.cp('-R', appName + '/vendor/BloomPhilippe/wp-decoboots/decoboots', appName + '/dist/wp-content/themes/');
            var promise2 = new Promise(function(resolve2, reject2) {
                setTimeout(function() {
                    resolve2('foo');
                }, 2000);

            });
            promise2.then(function(result2) {
                console.log('Installation : ' + appName);
                shell.exec('cd ' + appName + '/dist && wp core config --dbname=' + appName + ' --dbuser=root --dbpass= --locale=fr_FR');
                shell.exec('cd ' + appName + '/dist && wp core install --url=localhost/' + appName + '/dist --title=' + appName + ' --admin_user=admin --admin_password=admin --admin_email=admin@admin.be');
            });
        });
    },
});
var chalk = require('chalk');
var exec = require('exec');
var child_process = require('child_process');
var path = require('path');
var yeoman = require('yeoman-generator');
var yosay = require('yosay');
var wrench = require('wrench');
var shell = require('shelljs');
var Promise = require('es6-promise').Promise;
var promise = require('promise');
var appName = '';
module.exports = yeoman.generators.Base.extend({
    constructor: function() {
        yeoman.generators.Base.apply(this, arguments);
    },

    prompting: {
        askForName: function() {
            var done = this.async();
            this.prompt([{
                type: 'input',
                name: 'includeName',
                message: 'Project Name ?',
                default: 'project-name'
            }], function(answers) {
                this.includeName = answers.includeName;
                this.appname = answers.includeName;
                appName = answers.includeName;
                this.mkdir(this.appname);
                this.mkdir(this.appname + '/logs');
                shell.exec('mysql -u root -e "create database ' + this.appname + '"');
                done();
            }.bind(this));
        },
    },

    writing: function() {
        this.copy('composer.json', this.appname + '/composer.json');
        this.copy('development.nginx', this.appname + '/development.nginx');
    },

    install: function() {
        var promise = new Promise(function(resolve, reject) {
            setTimeout(function() {
                resolve('foo');
            }, 1000);
        });
        promise.then(function(result) {
            shell.exec('cd ' + appName + ' && composer install');
            shell.cp('-R', appName + '/vendor/BloomPhilippe/wp-decoboots/decoboots', appName + '/dist/wp-content/themes/');
            var promise2 = new Promise(function(resolve2, reject2) {
                setTimeout(function() {
                    resolve2('foo');
                }, 2000);

            });
            promise2.then(function(result2) {
                console.log('Installation : ' + appName);
                shell.exec('cd ' + appName + '/dist && wp core config --dbname=' + appName + ' --dbuser=root --dbpass= --locale=fr_FR');
                shell.exec('cd ' + appName + '/dist && wp core install --url=localhost/' + appName + '/dist --title=' + appName + ' --admin_user=admin --admin_password=admin --admin_email=admin@admin.be');
            });
        });
    },
});
